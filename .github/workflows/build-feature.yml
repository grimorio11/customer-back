# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build features and test feature branch

on:
  pull_request:
    branches: [ development ]
    types: [ opened, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest  #self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Pull and checkout from git repository
      run: |
        echo "pulling and checking out from git repository"

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache maven dependencies
      uses: actions/cache@v4
      with: 
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: build with maven
      run: |
        echo "building with maven"
        mvn clean install
=======
name: build and test feature branch
on:
  pull_request:
    branches: [ devel ]
    types: [ opened, reopened ]
jobs: 
  build-feature:
    runs-on: ubuntu-latest
    steps:
      #############################################################
      # 2- dowload code from feature branch , setup java 8 and check that source code is buildable
      ########################################################
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: pull and checkout from git repository
        run: |
           echo "pulling and checking out from git repository"

      - name: setup java 17 
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: build with maven
        run: |
          mvn clean test package
          echo "build with maven"

#######################################################
# Automatic merge to develop branch
#######################################################
  merge-feature-into-develop:
    runs-on: ubuntu-latest
    needs: build-feature
    if: ${{ success() }}
    #[For a specific job, you can use jobs.<job_id>.permissions to modify the default permissions granted to the GITHUB_TOKEN](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs)
    permissions:
      contents: write
      pull-requests: write
    steps:
      ########################################################
      # 1- Dowload source code
      #Only a single commit is fetched by default, for the ref/SHA that triggered the workflow, Set fetch-depth: 0 to fetch all history for all branches and tags
      ########################################################
      - uses: actions/checkout@v4
        with:
          #Dowload the code from destination branch (develop)
          ref: ${{ github.base_ref }}
          fetch-depth: 0

      # ########################################################
      # # 2- Merge to development branch
      # ########################################################
      - name: Merge to development branch
        if: ${{ success() }}
        run: |
          git config --global user.email "EMAIL-OF-WORKFLOW@USER"
          git config --global user.name "WORKFLOW-USER" 
          #Using -m "mesage" on merge command ins mandatori here in order to avoid open a text editor to write a commit message
          git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref }} -m "Merge pull request #${{ github.event.number }}"

      ########################################################
      # 3- Push changes after merge
      ##########################################################

      - name: Push changes after merge
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.base_ref }}

      ######################################################## 
      # 4- call publish-jar-as-artifact
      ######################################################## 
      - name: trigger deploy artifact
        if: success()
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: publish-artifact-event          
          client-payload: '{ "base_branch": "${{ github.base_ref }}" }'

        
        
      
      
